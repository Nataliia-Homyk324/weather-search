{"version":3,"file":"commonHelpers.js","sources":["../src/js/api.js","../src/js/helpers.js","../src/js/createMarkup.js","../src/main.js"],"sourcesContent":["export function getWeather(city) {\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=117bcd5592950f9f701a11f5ab982de0&units=metric`;\n    \n    return fetch(url)\n        .then(response => {\n         if (!response.ok) {\n             throw new Error(response.status);\n              }\n    return response.json();\n        })\n    .catch( (error) => console.log(error))\n}","export function formatTemperature(temp) {\n    return parseInt(temp);\n}","import {formatTemperature} from \"./helpers\"\n\nexport function createMarkup({name, main: {feels_like, temp, humidity, pressure}, sys: {country}, weather}){\n    return `<div class=\"weather-card\"><div><h2>${name}, ${\n        country\n      }</h2><img src=\"http://openweathermap.org/img/w/${\n        weather[0].icon\n      }.png\" width=\"80px\"><p>${\n        weather[0].description\n      }</p></div><div><p>Temperature: ${formatTemperature(\n        temp\n      )}&#8451;</p><p>Feels like: ${formatTemperature(\n        feels_like\n      )}&#8451;</p><p>Humidity: ${humidity}%</p><p>Pressure: ${pressure}</p></div>\n      </div>\n      `;\n}\n\n","// 1. Створи застосунок для пошуку погоди в своєму місті\n// Використовуй API https://openweathermap.org/api\n// (Current Weather Data -> Built-in API request by city name)\n// створи файл api.js що робитиме запит на бек\n// створи файл create-markup.js для створення розмітки (https://prnt.sc/LEataI862RLd)\n// додай пошук погоди в конкретному місті використовуючи форму\n\nimport { getWeather } from './js/api';\nimport { createMarkup } from './js/createMarkup';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst weatherDetails = document.querySelector('#weatherDetails');\nconst searchForm = document.querySelector('#searchForm');\n\nsearchForm.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const query = e.target.name.value.trim();\n  if (!query) {\n    return iziToast.warning({ message: 'Enter city' });\n  }\n  getWeather(query).then(data => {\n    if (!data) {\n      return iziToast.error({ message: 'Enter correct city' });\n    }\n    weatherDetails.insertAdjacentHTML('beforeend', createMarkup(data));\n  });\n}\n"],"names":["getWeather","city","url","response","error","formatTemperature","temp","createMarkup","name","feels_like","humidity","pressure","country","weather","weatherDetails","searchForm","onSubmit","e","query","iziToast","data"],"mappings":"svBAAO,SAASA,EAAWC,EAAM,CAC7B,MAAMC,EAAM,qDAAqDD,CAAI,uDAErE,OAAO,MAAMC,CAAG,EACX,KAAKC,GAAY,CACjB,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAExC,OAAOA,EAAS,MACpB,CAAS,EACJ,MAAQC,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACzC,CCXO,SAASC,EAAkBC,EAAM,CACpC,OAAO,SAASA,CAAI,CACxB,CCAO,SAASC,EAAa,CAAC,KAAAC,EAAM,KAAM,CAAC,WAAAC,EAAY,KAAAH,EAAM,SAAAI,EAAU,SAAAC,CAAQ,EAAG,IAAK,CAAC,QAAAC,CAAO,EAAG,QAAAC,CAAO,EAAE,CACvG,MAAO,sCAAsCL,CAAI,KAC7CI,CACR,kDACQC,EAAQ,CAAC,EAAE,IACnB,yBACQA,EAAQ,CAAC,EAAE,WACZ,kCAAiCR,EAChCC,CACD,CAAA,6BAA6BD,EAC5BI,CACD,CAAA,2BAA2BC,CAAQ,qBAAqBC,CAAQ;AAAA;AAAA,OAGvE,CCJA,MAAMG,EAAiB,SAAS,cAAc,iBAAiB,EACzDC,EAAa,SAAS,cAAc,aAAa,EAEvDA,EAAW,iBAAiB,SAAUC,CAAQ,EAE9C,SAASA,EAASC,EAAG,CACnBA,EAAE,eAAc,EAEhB,MAAMC,EAAQD,EAAE,OAAO,KAAK,MAAM,OAClC,GAAI,CAACC,EACH,OAAOC,EAAS,QAAQ,CAAE,QAAS,YAAc,CAAA,EAEnDnB,EAAWkB,CAAK,EAAE,KAAKE,GAAQ,CAC7B,GAAI,CAACA,EACH,OAAOD,EAAS,MAAM,CAAE,QAAS,oBAAsB,CAAA,EAEzDL,EAAe,mBAAmB,YAAaP,EAAaa,CAAI,CAAC,CACrE,CAAG,CACH"}